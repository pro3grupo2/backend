generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("MYSQL_URL")
}

model area {
  id           Int            @id @default(autoincrement())
  titulo       String?        @unique(map: "titulo") @db.VarChar(50)
  titulaciones titulaciones[]
}

model asignaturas {
  id                       Int                        @id @default(autoincrement())
  titulo                   String?                    @unique(map: "titulo") @db.VarChar(50)
  curso                    Int?
  letra                    String?                    @db.Char(1)
  asignaturas_materias     asignaturas_materias[]
  proyectos                proyectos[]
  titulaciones_asignaturas titulaciones_asignaturas[]
}

model asignaturas_materias {
  id_asignatura Int
  id_materia    Int
  asignaturas   asignaturas @relation(fields: [id_asignatura], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "asignaturas_materias_ibfk_1")
  materias      materias    @relation(fields: [id_materia], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "asignaturas_materias_ibfk_2")

  @@id([id_asignatura, id_materia])
  @@index([id_materia], map: "id_materia")
}

model codigos {
  id    Int     @id @default(autoincrement())
  token String? @unique(map: "token") @db.VarChar(50)
  usos  Int?    @default(1)
}

model departamentos {
  id                     Int                      @id @default(autoincrement())
  titulo                 String?                  @unique(map: "titulo") @db.VarChar(50)
  usuarios_departamentos usuarios_departamentos[]
}

model materias {
  id                   Int                    @id @default(autoincrement())
  titulo               String?                @unique(map: "titulo") @db.VarChar(50)
  asignaturas_materias asignaturas_materias[]
}

model premios {
  id                Int                 @id @default(autoincrement())
  titulo            String?             @unique(map: "titulo") @db.VarChar(50)
  proyectos_premios proyectos_premios[]
}

model proyectos {
  id                 Int                  @id @default(autoincrement())
  id_creador         Int?
  id_asignatura      Int?
  titulo             String?              @unique(map: "titulo") @db.VarChar(50)
  ficha              String?              @db.Text
  url                String?              @db.Text
  portada            String?              @db.Text
  usuarios           usuarios?            @relation(fields: [id_creador], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "proyectos_ibfk_1")
  asignaturas        asignaturas?         @relation(fields: [id_asignatura], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "proyectos_ibfk_2")
  proyectos_premios  proyectos_premios[]
  usuarios_proyectos usuarios_proyectos[]

  @@index([id_asignatura], map: "id_asignatura")
  @@index([id_creador], map: "id_creador")
}

model proyectos_premios {
  id_proyecto Int
  id_premio   Int
  proyectos   proyectos @relation(fields: [id_proyecto], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "proyectos_premios_ibfk_1")
  premios     premios   @relation(fields: [id_premio], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "proyectos_premios_ibfk_2")

  @@id([id_proyecto, id_premio])
  @@index([id_premio], map: "id_premio")
}

model titulaciones {
  id                       Int                        @id @default(autoincrement())
  id_area                  Int?
  titulo                   String?                    @unique(map: "titulo") @db.VarChar(50)
  area                     area?                      @relation(fields: [id_area], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "titulaciones_ibfk_1")
  titulaciones_asignaturas titulaciones_asignaturas[]
  usuarios_titulaciones    usuarios_titulaciones[]

  @@index([id_area], map: "id_area")
}

model titulaciones_asignaturas {
  id_titulacion Int
  id_asignatura Int
  titulaciones  titulaciones @relation(fields: [id_titulacion], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "titulaciones_asignaturas_ibfk_1")
  asignaturas   asignaturas  @relation(fields: [id_asignatura], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "titulaciones_asignaturas_ibfk_2")

  @@id([id_titulacion, id_asignatura])
  @@index([id_asignatura], map: "id_asignatura")
}

model usuarios {
  id                     Int                      @id @default(autoincrement())
  correo                 String?                  @unique(map: "correo") @db.VarChar(50)
  nombre_completo        String?                  @db.VarChar(50)
  alias                  String?                  @unique(map: "alias") @db.VarChar(50)
  password               String?                  @db.VarChar(200)
  frase_recuperacion     String?                  @db.VarChar(100)
  rol                    usuarios_rol?
  proyectos              proyectos[]
  usuarios_departamentos usuarios_departamentos[]
  usuarios_proyectos     usuarios_proyectos[]
  usuarios_titulaciones  usuarios_titulaciones[]
}

model usuarios_departamentos {
  id_usuario      Int
  id_departamento Int
  usuarios        usuarios      @relation(fields: [id_usuario], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "usuarios_departamentos_ibfk_1")
  departamentos   departamentos @relation(fields: [id_departamento], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "usuarios_departamentos_ibfk_2")

  @@id([id_usuario, id_departamento])
  @@index([id_departamento], map: "id_departamento")
}

model usuarios_proyectos {
  id_usuario  Int
  id_proyecto Int
  usuarios    usuarios  @relation(fields: [id_usuario], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "usuarios_proyectos_ibfk_1")
  proyectos   proyectos @relation(fields: [id_proyecto], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "usuarios_proyectos_ibfk_2")

  @@id([id_usuario, id_proyecto])
  @@index([id_proyecto], map: "id_proyecto")
}

model usuarios_titulaciones {
  id_usuario    Int
  id_titulacion Int
  usuarios      usuarios     @relation(fields: [id_usuario], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "usuarios_titulaciones_ibfk_1")
  titulaciones  titulaciones @relation(fields: [id_titulacion], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "usuarios_titulaciones_ibfk_2")

  @@id([id_usuario, id_titulacion])
  @@index([id_titulacion], map: "id_titulacion")
}

enum usuarios_rol {
  alumno
  profesor
  coordinador
  invitado
}
