generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("MYSQL_URL")
}

model areas {
  id           Int            @id @default(autoincrement())
  titulo       String?        @unique(map: "titulo") @db.VarChar(200)
  titulaciones titulaciones[]
}

model asignaturas {
  id                       Int                        @id @default(autoincrement())
  titulo                   String?                    @unique(map: "titulo") @db.VarChar(200)
  curso                    Int?
  proyectos_asignaturas    proyectos_asignaturas[]
  titulaciones_asignaturas titulaciones_asignaturas[]
}

model codigos {
  id     Int     @id @default(autoincrement())
  codigo String? @unique(map: "codigo") @db.VarChar(10)
  usos   Int?    @default(1)
}

model participantes {
  id          Int        @id @default(autoincrement())
  id_proyecto Int?
  correo      String?    @db.VarChar(200)
  proyectos   proyectos? @relation(fields: [id_proyecto], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "participantes_ibfk_1")

  @@index([id_proyecto], map: "id_proyecto")
}

model premios {
  id          Int        @id @default(autoincrement())
  id_proyecto Int?
  titulo      String?    @db.VarChar(200)
  proyectos   proyectos? @relation(fields: [id_proyecto], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "premios_ibfk_1")

  @@index([id_proyecto], map: "id_proyecto")
}

model proyectos {
  id                    Int                     @id @default(autoincrement())
  id_creador            Int?
  titulo                String?                 @unique(map: "titulo") @db.VarChar(200)
  ficha                 String?                 @db.Text
  url                   String?                 @db.Text
  portada               String?                 @db.Text
  estado                proyectos_estado?       @default(pendiente)
  premiado              Boolean?                @default(false)
  anio                  Int?                    @default(dbgenerated("(year(curdate()))")) @db.Year
  participantes         participantes[]
  premios               premios[]
  usuarios              usuarios?               @relation(fields: [id_creador], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "proyectos_ibfk_1")
  proyectos_asignaturas proyectos_asignaturas[]

  @@index([id_creador], map: "id_creador")
}

model titulaciones {
  id                       Int                        @id @default(autoincrement())
  id_area                  Int?
  titulo                   String?                    @unique(map: "titulo") @db.VarChar(200)
  areas                    areas?                     @relation(fields: [id_area], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "titulaciones_ibfk_1")
  titulaciones_asignaturas titulaciones_asignaturas[]

  @@index([id_area], map: "id_area")
}

model titulaciones_asignaturas {
  id_titulacion Int
  id_asignatura Int
  titulaciones  titulaciones @relation(fields: [id_titulacion], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "titulaciones_asignaturas_ibfk_1")
  asignaturas   asignaturas  @relation(fields: [id_asignatura], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "titulaciones_asignaturas_ibfk_2")

  @@id([id_titulacion, id_asignatura])
  @@index([id_asignatura], map: "id_asignatura")
}

model usuarios {
  id              Int           @id @default(autoincrement())
  correo          String?       @unique(map: "correo") @db.VarChar(200)
  alias           String?       @unique(map: "alias") @db.VarChar(200)
  nombre_completo String?       @db.VarChar(200)
  password        String?       @db.VarChar(200)
  descripcion     String?       @db.Text
  portfolio       String?       @db.VarChar(200)
  foto            String?       @db.VarChar(200)
  rol             usuarios_rol?
  promocion       Int?          @default(dbgenerated("(year(curdate()))")) @db.Year
  proyectos       proyectos[]
}

model proyectos_asignaturas {
  id_proyecto   Int
  id_asignatura Int
  proyectos     proyectos   @relation(fields: [id_proyecto], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "proyectos_asignaturas_ibfk_1")
  asignaturas   asignaturas @relation(fields: [id_asignatura], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "proyectos_asignaturas_ibfk_2")

  @@id([id_proyecto, id_asignatura])
  @@index([id_asignatura], map: "id_asignatura")
  @@index([id_proyecto], map: "id_proyecto")
}

enum proyectos_estado {
  pendiente
  aceptado
  rechazado
}

enum usuarios_rol {
  alumno
  alumni
  profesor
  coordinador
  externo
}
